# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- master

#pr:
#  branches:
#    include:
#    - '*'  # must quote since "*" is a YAML reserved character; we want a string


variables:
  buildConfiguration: 'Release'
  azureSubscription: 'Azure Subscription'
  webAppName: 'smallerurl'
  redirectAppName: 'smul'

stages:
- stage: Build
  jobs:
  - job: Build
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: UseDotNet@2
      displayName: 'Install .NET Core SDK'
      inputs:
        packageType: sdk
        version: 2.2.401
        installationPath: $(Agent.ToolsDirectory)/dotnet

    - task: DotNetCoreCLI@2
      displayName: 'DotNet Restore'
      inputs:
        command: restore
      
    - task: DotNetCoreCLI@2
      displayName: 'DotNet Build'
      inputs:
        command: build
        arguments: '--configuration $(buildConfiguration)' 

    - task: DotNetCoreCLI@2
      displayName: 'DotNet Test'
      inputs:
        command: test
        arguments: '--configuration $(buildConfiguration) --collect "XPlat Code Coverage"'        
        
    - task: DotNetCoreCLI@2
      displayName: 'DotNet Publish'
      inputs:
        command: publish
        arguments: '--output $(Build.ArtifactStagingDirectory)/WebApp'               
        
    - publish: $(Build.ArtifactStagingDirectory)/WebApp
      displayName: 'Publish Artifacts'
      artifact: WebApp

  
- stage: Deploy
  jobs:
  - deployment: DeployWeb
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
    displayName: Deploy Web App
    pool:
      vmImage: 'ubuntu-latest'
    environment: 'dev'
    variables:
    - group: deploy-dev
    strategy:
      runOnce:
        deploy:
          steps:
#          - task: FileTransform@1
#            inputs:
#              folderPath: '$(Pipeline.Workspace)/WebApp/UrlShortener.Web.zip'
#          - task: FileTransform@1
#            inputs:
#              folderPath: '$(Pipeline.Workspace)/WebApp/UrlShortener.Redirect.zip'

          - task: AzureRmWebAppDeployment@3
            inputs:
              azureSubscription: '$(azureSubscription)'
              WebAppName: '$(webAppName)'
              Package: $(Pipeline.Workspace)/WebApp/UrlShortener.Web.zip
              RemoveAdditionalFilesFlag: true

          - task: AzureRmWebAppDeployment@3
            inputs:
              azureSubscription: '$(azureSubscription)'
              WebAppName: '$(redirectAppName)'
              Package: $(Pipeline.Workspace)/WebApp/UrlShortener.Redirect.zip
              RemoveAdditionalFilesFlag: true
